#!/usr/bin/openrc-run
# Credits: Felipe Facundes
# Telegram: @fefacundes
# Telegram Group: t.me/winehq_linux

# Options when starting cpufreq (given to the `cpupower` program)
# Possible options are:
# -g --governor <GOV> (ie: ondemand, performance, or powersave)
# -d --min <FREQ> (ie: 1000MHz)
# -u --max <FREQ> (ie: 2000MHz)
# -f --freq <FREQ> (requires userspace governor, this *can not* be combined with
#                   with any other parameters).
# Frequencies can be passed in Hz, kHz (default), MHz, GHz, or THz by postfixing the
# value with  the  wanted  unit name, without any space.
# (frequency in kHz =^ Hz * 0.001 =^ MHz * 1000 =^ GHz * 1000000).

start () { /usr/bin/cpupower frequency-set -g performance
}

restart () { /usr/bin/pkill -9 cpupower ;
declare -i fail=0

# parse frequency options
declare -a params=()
params+=(${governor:+-g $governor})
params+=(${min_freq:+-d $min_freq})
params+=(${max_freq:+-u $max_freq})
params+=(${freq:+-f $freq})

# apply frequency options
if ((${#params[@]} > 0)); then
  cpupower frequency-set "${params[@]}" >/dev/null || fail=1
fi

# parse cpu options
declare -a params=()
params+=(${mc_scheduler:+-m $mc_scheduler})
params+=(${smp_scheduler:+-s $smp_scheduler})
params+=(${perf_bias:+-b $perf_bias})

# apply cpu options
if ((${#params[@]} > 0)); then
  cpupower set "${params[@]}" >/dev/null || fail=1
fi

exit $fail

# vim:set ts=2 sw=2 ft=sh et:

}

stop () { /usr/bin/pkill -9 cpupower
}